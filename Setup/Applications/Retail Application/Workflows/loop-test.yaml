harnessApiVersion: '1.0'
type: MULTI_SERVICE
concurrencyStrategy: INFRA
envName: prod-env
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupIds:
  - GXFtTUS2Q9Gmo1r4MhqS4g
postDeploymentStepSkipStrategy:
- assertionExpression: ${context.args.nextIndex} < 0
  scope: ALL_STEPS
postDeploymentSteps:
- type: HTTP
  name: Trigger next iteration
  properties:
    assertion: ${httpResponseCode} == 200
    body: '{"application":"Or2FWFL6TguB964BEiiD2A","parameters":{"index":"${context.args.nextIndex}","tag":"${workflow.variables.tag}"}}'
    executeWithPreviousSteps: false
    headers:
    - key: content-type
      value: application/json
    method: POST
    publishAsVar: false
    responseProcessingExpressions: ''
    sweepingOutputName: null
    sweepingOutputScope: null
    tags: null
    templateUuid: null
    templateVariables: null
    templateVersion: null
    timeoutMillis: 10000
    url: https://app.harness.io/gateway/api/webhooks/NCRBSjbeEhVYKoyWqmEbuPnPWeAZkHSUk3763dXB?accountId=lnFZRF6jQO6tQnB9znMALw
    useProxy: false
preDeploymentSteps:
- type: SHELL_SCRIPT
  name: Collect arguments
  properties:
    commandPath: null
    connectionAttributes: null
    executeOnDelegate: true
    host: null
    outputVars: arg1,arg2,listSize,nextIndex
    publishAsVar: true
    scriptString: |
      cat <<EOF > listfile.txt
      index-0 abc 123
      index-1 def 456
      index-2 ghi 789
      index-3 jkl 012
      EOF

      arg1=$(grep index-${workflow.variables.index} listfile.txt | cut -d ' ' -f 2)
      arg2=$(grep index-${workflow.variables.index} listfile.txt | cut -d ' ' -f 3)
      listSize=$(cat listfile.txt | wc -l)
      nextIndex=$((${workflow.variables.index} + 1))

      if (( $nextIndex >= $listSize )); then
        nextIndex=-1
      fi
    scriptType: BASH
    sshKeyRef: null
    sweepingOutputName: args
    sweepingOutputScope: WORKFLOW
    tags: null
    templateExpressions: null
    templateUuid: null
    templateVariables: null
    templateVersion: null
    timeoutMillis: 60000
- type: SHELL_SCRIPT
  name: deploy with args
  properties:
    commandPath: null
    connectionAttributes: null
    executeOnDelegate: true
    host: null
    outputVars: ''
    publishAsVar: false
    scriptString: |-
      echo arg1=${context.args.arg1}
      echo arg2=${context.args.arg2}
    scriptType: BASH
    sshKeyRef: null
    sweepingOutputName: null
    sweepingOutputScope: null
    tags: null
    templateExpressions: null
    templateVariables: ''
    timeoutMillis: 60000
tags:
  execution: ${workflow.variables.tag}
templatized: true
userVariables:
- type: TEXT
  fixed: false
  mandatory: true
  name: index
  value: '0'
- type: TEXT
  fixed: false
  mandatory: false
  name: tag
