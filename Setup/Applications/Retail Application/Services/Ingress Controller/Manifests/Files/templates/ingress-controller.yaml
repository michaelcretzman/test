apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller
spec:
  type: LoadBalancer
  loadBalancerIP: {{.Values.ingressController.staticIp}}
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx-ingress-controller
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-controller
  annotations:
    harness.io/skip-versioning: true
data:
  proxy-body-size: 1024m
  server-tokens: "false"
  proxy-read-timeout: "600"
  proxy-send-timeout: "600"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
spec:
  progressDeadlineSeconds: 600
  replicas: {{.Values.ingressController.instances}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.ingressController.maxSurge}}
      maxUnavailable: {{.Values.ingressController.maxUnavailable}}
  selector:
    matchLabels:
      app: nginx-ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx-ingress-controller
        release: {{.Values.release | quote}}
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
      - name: nginx-ingress-controller
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-backend
        - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller
        #- --publish-service=$(POD_NAMESPACE)/nginx-ingress-controller
        - --annotations-prefix=nginx.ingress.kubernetes.io
        #- --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
        #- --udp-services-configmap=$(POD_NAMESPACE)/udp-services
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
          # www-data -> 33
          runAsUser: 33
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: {{.Values.ingressController.image}}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: {{.Values.ingressController.cpu}}
            memory: {{.Values.ingressController.memory}}
          requests:
            cpu: {{.Values.ingressController.cpu}}
            memory: {{.Values.ingressController.memory}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
